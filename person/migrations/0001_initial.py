# Generated by Django 5.1.5 on 2025-03-03 04:14

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=10, unique=True)),
                ('business_type', models.CharField(choices=[('Retailer', 'Retailer'), ('Whole Saler', 'Whole Saler')], max_length=255)),
                ('father_name', models.CharField(blank=True, max_length=255, null=True)),
                ('shop_name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('পুরুষ', 'পুরুষ'), ('নারী', 'নারী'), ('অন্যান্য', 'অন্যান্য')], max_length=50, null=True)),
                ('blood_group', models.CharField(blank=True, max_length=10, null=True)),
                ('nid_number', models.CharField(blank=True, max_length=50, null=True)),
                ('market_name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('mobile_number_1', models.CharField(blank=True, max_length=15, null=True)),
                ('mobile_number_2', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('present_division', models.CharField(blank=True, max_length=255, null=True)),
                ('present_district', models.CharField(blank=True, max_length=255, null=True)),
                ('present_thana', models.CharField(blank=True, max_length=255, null=True)),
                ('present_route', models.CharField(blank=True, max_length=255, null=True)),
                ('present_area', models.CharField(blank=True, max_length=255, null=True)),
                ('present_village_street', models.CharField(blank=True, max_length=255, null=True)),
                ('present_post_office', models.CharField(blank=True, max_length=255, null=True)),
                ('present_post_code', models.CharField(blank=True, max_length=100, null=True)),
                ('permanent_division', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_district', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_thana', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_route', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_area', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_village_street', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_post_office', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_post_code', models.CharField(blank=True, max_length=100, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('shop_photo', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('nid_front_photo', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('nid_back_photo', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('previous_account', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('khatian_number', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mohajon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('business_type', models.CharField(choices=[('মহাজন', 'মহাজন'), ('বেপারী/চাষী', 'বেপারী/চাষী')], max_length=255)),
                ('father_name', models.CharField(blank=True, max_length=255, null=True)),
                ('shop_name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('পুরুষ', 'পুরুষ'), ('নারী', 'নারী'), ('অন্যান্য', 'অন্যান্য')], max_length=50, null=True)),
                ('blood_group', models.CharField(blank=True, max_length=10, null=True)),
                ('nid_number', models.CharField(blank=True, max_length=50, null=True)),
                ('market_name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('mobile_number_1', models.CharField(blank=True, max_length=15, null=True)),
                ('mobile_number_2', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('present_division', models.CharField(blank=True, max_length=255, null=True)),
                ('present_district', models.CharField(blank=True, max_length=255, null=True)),
                ('present_thana', models.CharField(blank=True, max_length=255, null=True)),
                ('present_route', models.CharField(blank=True, max_length=255, null=True)),
                ('present_area', models.CharField(blank=True, max_length=255, null=True)),
                ('present_village_street', models.CharField(blank=True, max_length=255, null=True)),
                ('present_post_office', models.CharField(blank=True, max_length=255, null=True)),
                ('present_post_code', models.CharField(blank=True, max_length=100, null=True)),
                ('permanent_division', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_district', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_thana', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_route', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_area', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_village_street', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_post_office', models.CharField(blank=True, max_length=255, null=True)),
                ('permanent_post_code', models.CharField(blank=True, max_length=100, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('shop_photo', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('nid_front_photo', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('nid_back_photo', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('previous_account', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('khatian_number', models.CharField(blank=True, max_length=50, null=True)),
                ('total_payment', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('total_purchases', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('due_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(blank=True, default='General', max_length=40, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='image/')),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BankInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('account_holder_name', models.CharField(blank=True, max_length=255, null=True)),
                ('account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('branch_name', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('mohajon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banking_details', to='person.mohajon')),
            ],
        ),
    ]
